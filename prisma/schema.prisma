// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

model guild {
  id            String        @id @map("_id")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt // \n
  prefix        String        @default("-") @map("prefix") // \n
  enableTickets Boolean       @default(true) @map("enable_tickets")
  musicStrictM  Boolean       @default(false) @map("music_strict_m")
  guildWelcome  guildWelcome?
  members       member[]

  @@index([id])
  @@map("guild")
}

model guildWelcome {
  id          String      @id @map("_id")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt // \n
  guild       guild       @relation(fields: [guildId], references: [id])
  guildId     String      @unique @map("guild_id") // \n
  messageType MessageType @map("message_type") @default(MESSAGE)
  enabled     Boolean     @default(false) @map("enabled")
  channelId   String?     @map("channel_id")
  message     String      @default("Seja Bem Vind@ ao servidor {USER}") @map("message")

  @@index([id, guildId])
  @@map("guild_welcome")
}

model user {
  id        String   @id @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // \n
  type      UserType @default(DEFAULT)
  members   member[]
  tickets   ticket[]

  @@index([id])
  @@map("user")
}

model member {
  id          String   @id @map("_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt // \n
  xp          Int      @default(0) @map("xp")
  dj          Boolean  @default(false) @map("dj")
  playAllowed Boolean  @default(false) @map("play_allowed")
  guild       guild    @relation(fields: [guildId], references: [id])
  guildId     String   @unique @map("guild_id")
  user        user     @relation(fields: [userId], references: [id])
  userId      String   @unique @map("user_id")

  @@index([id, guildId, userId])
  @@map("member")
}

model ticket {
  id        String   @id @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // \n
  enabled   Boolean  @default(false) @map("enabled")
  user      user     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")

  @@index([id, userId])
  @@map("ticket")
}

enum MessageType {
  MESSAGE
  IMAGE
  EMBED
}

enum UserType {
  DEFAULT
  ADMIN
}
